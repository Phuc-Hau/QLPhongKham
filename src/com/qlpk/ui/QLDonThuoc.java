 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlpk.ui;

import com.qlpk.dao.BenhNhanDao;
import com.qlpk.dao.DonThuocCTDao;
import com.qlpk.dao.DonThuocDao;
import com.qlpk.dao.PhieuKhamDao;
import com.qlpk.dao.PhongKhamBenhDao;
import com.qlpk.dao.ThuocDao;
import com.qlpk.entity.BenhNhan;
import com.qlpk.entity.DonThuoc;
import com.qlpk.entity.DonThuocCT;
import com.qlpk.entity.PhieuKham;
import com.qlpk.entity.PhongKham;
import com.qlpk.entity.Thuoc;
import com.qlpk.utils.DTable;
import com.qlpk.utils.Msgbox;
import com.qlpk.utils.Utility;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.ImageObserver;
import java.awt.print.*;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author fptshop
 */
public class QLDonThuoc extends javax.swing.JPanel {

    /**
     * Creates new form QLDonThuoc
     */
    public QLDonThuoc() {
        initComponents();
        inti();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsDonThuoc = new javax.swing.JTabbedPane();
        pnlCapnhap = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtBacSi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaBN = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDonThuoc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaPhieuKham = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblThuoc = new javax.swing.JTable();
        txtTenBenhNhan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnXoaThuoc = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        pnlThuoc = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbldanhsachThuoc = new javax.swing.JTable();
        pnlBenhNhan = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPhieuKhamDT = new javax.swing.JTable();
        pnlDanhSach = new javax.swing.JPanel();
        tabsDanhsach = new javax.swing.JTabbedPane();
        pnl = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDonThuoc = new javax.swing.JTable();
        pnlPrint = new javax.swing.JPanel();
        sc = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        tabsDonThuoc.setBackground(new java.awt.Color(255, 255, 255));

        pnlCapnhap.setBackground(new java.awt.Color(89, 194, 246));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Bác sĩ :");

        txtBacSi.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Mã Bệnh Nhân :");

        txtMaBN.setEditable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Đơn Thuốc :");

        txtDonThuoc.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Mã Phiếu Khám :");

        txtMaPhieuKham.setEditable(false);

        tblThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại Thuốc", "Tên Thuốc", "Số Lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThuocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblThuoc);

        txtTenBenhNhan.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Tên Bệnh Nhân :");

        jPanel2.setBackground(new java.awt.Color(89, 194, 246));

        btnThem.setBackground(new java.awt.Color(0, 255, 63));
        btnThem.setText("Thêm");
        btnThem.setEnabled(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(252, 255, 0));
        btnSua.setText("Sửa");
        btnSua.setEnabled(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 0, 0));
        btnXoa.setText("Xóa");
        btnXoa.setEnabled(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setBackground(new java.awt.Color(255, 174, 0));
        btnMoi.setText("Mới");
        btnMoi.setEnabled(false);
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnXoaThuoc.setBackground(new java.awt.Color(157, 0, 0));
        btnXoaThuoc.setText("Xóa Thuốc");
        btnXoaThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaThuocActionPerformed(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(153, 0, 255));
        btnPrint.setText("In Đơn Thuốc");
        btnPrint.setEnabled(false);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnXoaThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrint)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPrint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoaThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(89, 194, 246));

        btnFirst.setText("<|");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFirst)
                .addGap(18, 18, 18)
                .addComponent(btnPrev)
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(18, 18, 18)
                .addComponent(btnLast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCapnhapLayout = new javax.swing.GroupLayout(pnlCapnhap);
        pnlCapnhap.setLayout(pnlCapnhapLayout);
        pnlCapnhapLayout.setHorizontalGroup(
            pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCapnhapLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtBacSi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDonThuoc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaPhieuKham, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(pnlCapnhapLayout.createSequentialGroup()
                        .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(76, 76, 76)
                        .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(276, Short.MAX_VALUE))
            .addGroup(pnlCapnhapLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCapnhapLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 919, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        pnlCapnhapLayout.setVerticalGroup(
            pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCapnhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBacSi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTenBenhNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDonThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaPhieuKham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addGroup(pnlCapnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        tabsDonThuoc.addTab("Cập nhập", pnlCapnhap);

        pnlThuoc.setBackground(new java.awt.Color(89, 194, 246));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)), "Tìm Kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tbldanhsachThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loại thuốc", "Tên thuốc", "Giá bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbldanhsachThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldanhsachThuocMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbldanhsachThuoc);

        javax.swing.GroupLayout pnlThuocLayout = new javax.swing.GroupLayout(pnlThuoc);
        pnlThuoc.setLayout(pnlThuocLayout);
        pnlThuocLayout.setHorizontalGroup(
            pnlThuocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThuocLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlThuocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        pnlThuocLayout.setVerticalGroup(
            pnlThuocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThuocLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        tabsDonThuoc.addTab("Thuốc", pnlThuoc);

        pnlBenhNhan.setBackground(new java.awt.Color(89, 194, 246));

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));

        tblPhieuKhamDT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phiếu Khám", "Mã Bệnh Nhân", "Tên Bệnh Nhân", "Bác Sĩ", "Phòng Khám", "Ngày Khám"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhieuKhamDT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuKhamDTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblPhieuKhamDT);
        if (tblPhieuKhamDT.getColumnModel().getColumnCount() > 0) {
            tblPhieuKhamDT.getColumnModel().getColumn(0).setPreferredWidth(75);
            tblPhieuKhamDT.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblPhieuKhamDT.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblPhieuKhamDT.getColumnModel().getColumn(3).setPreferredWidth(200);
            tblPhieuKhamDT.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        javax.swing.GroupLayout pnlBenhNhanLayout = new javax.swing.GroupLayout(pnlBenhNhan);
        pnlBenhNhan.setLayout(pnlBenhNhanLayout);
        pnlBenhNhanLayout.setHorizontalGroup(
            pnlBenhNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBenhNhanLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 879, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        pnlBenhNhanLayout.setVerticalGroup(
            pnlBenhNhanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBenhNhanLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        tabsDonThuoc.addTab("Bệnh Nhân", pnlBenhNhan);

        pnlDanhSach.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl.setBackground(new java.awt.Color(89, 194, 246));

        tblDonThuoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Đơn Thuốc", "Mã Phiếu Khám", "Bệnh Nhân", "Tên Bệnh Nhân", "Bác Sĩ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonThuoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonThuocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDonThuoc);
        if (tblDonThuoc.getColumnModel().getColumnCount() > 0) {
            tblDonThuoc.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblDonThuoc.getColumnModel().getColumn(1).setPreferredWidth(30);
            tblDonThuoc.getColumnModel().getColumn(2).setPreferredWidth(35);
            tblDonThuoc.getColumnModel().getColumn(3).setPreferredWidth(175);
        }

        javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
        pnl.setLayout(pnlLayout);
        pnlLayout.setHorizontalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 911, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        pnlLayout.setVerticalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        tabsDanhsach.addTab("tab1", pnl);

        pnlPrint.setBackground(new java.awt.Color(255, 255, 255));

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        sc.setViewportView(tblTable);
        if (tblTable.getColumnModel().getColumnCount() > 0) {
            tblTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblTable.getColumnModel().getColumn(1).setPreferredWidth(110);
            tblTable.getColumnModel().getColumn(2).setPreferredWidth(25);
        }

        javax.swing.GroupLayout pnlPrintLayout = new javax.swing.GroupLayout(pnlPrint);
        pnlPrint.setLayout(pnlPrintLayout);
        pnlPrintLayout.setHorizontalGroup(
            pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
            .addGroup(pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrintLayout.createSequentialGroup()
                    .addContainerGap(264, Short.MAX_VALUE)
                    .addComponent(sc, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(396, Short.MAX_VALUE)))
        );
        pnlPrintLayout.setVerticalGroup(
            pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
            .addGroup(pnlPrintLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrintLayout.createSequentialGroup()
                    .addContainerGap(77, Short.MAX_VALUE)
                    .addComponent(sc, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(251, Short.MAX_VALUE)))
        );

        tabsDanhsach.addTab("tab2", pnlPrint);

        pnlDanhSach.add(tabsDanhsach, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -26, -1, 610));

        tabsDonThuoc.addTab("Danh sách", pnlDanhSach);
        pnlDanhSach.getAccessibleContext().setAccessibleName("");

        tabsDonThuoc.setSelectedIndex(3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsDonThuoc)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsDonThuoc)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThuocMouseClicked
        // TODO add your handling code here:
        this.rowDonThuocThuoc = tblThuoc.getSelectedRow();
    }//GEN-LAST:event_tblThuocMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if(this.CheckErrorDonThuoc()){
            this.insertDonThuoc();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.deleteDonThuoc();
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if(this.CheckErrorDonThuoc()){
            this.updateDonThuoc();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        // TODO add your handling code here:
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnXoaThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaThuocActionPerformed
        // TODO add your handling code here:
        if(rowDonThuocThuoc != -1){
            DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
            model.removeRow(rowDonThuocThuoc);
            rowDonThuocThuoc=-1;
        }else{
            Msgbox.alert(this, "Chưa Chọn thuốc để xóa");
        }
    }//GEN-LAST:event_btnXoaThuocActionPerformed

    private void tbldanhsachThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldanhsachThuocMouseClicked
        // TODO add your handling code here:
        indexDanhsachThuoc=tbldanhsachThuoc.getSelectedRow();
        if(evt.getClickCount()==2){
            this.AddTableThuocKham();
        }
    }//GEN-LAST:event_tbldanhsachThuocMouseClicked

    private void tblPhieuKhamDTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuKhamDTMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        model.setRowCount(0);
        indexPK=tblPhieuKhamDT.getSelectedRow();
        String maPk = (String) tblPhieuKhamDT.getValueAt(indexPK, 0);
        if(evt.getClickCount()==2){
            PhieuKham pk = daoPK.selectByID(Integer.valueOf(maPk));
            this.setDonThuocBenhNhan(pk);
            tabsDonThuoc.setSelectedIndex(0);
            updateStatusDT(true);
        }
    }//GEN-LAST:event_tblPhieuKhamDTMouseClicked

    private void tblDonThuocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonThuocMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblDonThuoc.getSelectedRow();
            this.editDT();
            fillTablePrint();
        }
    }//GEN-LAST:event_tblDonThuocMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        this.timKiem();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        
        fillTablePrint();
        PrinterJob pj = PrinterJob.getPrinterJob();        
        pj.setPrintable(new QLDonThuoc.BillPrintable(),getPageFormat(pj));
        try {
             pj.print();
        }
         catch (PrinterException ex) {
                 ex.printStackTrace();
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    int rowIN =0;
    DecimalFormat formatter = new DecimalFormat("###,###,###");
    
    public PageFormat getPageFormat(PrinterJob pj){
    
        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();    
        double bodyHeight = 6+rowIN;  
        double headerHeight = 5.0;                  
        double footerHeight = 5.0;        
        double width = cm_to_pp(12); 
        double height = cm_to_pp(headerHeight+bodyHeight+footerHeight); 
        paper.setSize(width, height);
        paper.setImageableArea(0,10,width,height - cm_to_pp(1));  

        pf.setOrientation(PageFormat.PORTRAIT);  
        pf.setPaper(paper);    

        return pf;
    }
        
    protected static double cm_to_pp(double cm){            
	 return toPPI(cm * 0.393600787);            
    }
    
    protected static double toPPI(double inch){            
	return inch * 72d;            
    }
    
    public class BillPrintable implements Printable {
  
        public int print(Graphics graphics, PageFormat pageFormat,int pageIndex) throws PrinterException {    

          ImageIcon icon=new ImageIcon("src/com/qlpk/icon/DaiDien.jpg"); 
          int result = NO_SUCH_PAGE;    
            if (pageIndex == 0) {                    

                Graphics2D g2d = (Graphics2D) graphics;                            
                g2d.translate((int) pageFormat.getImageableX(),(int) pageFormat.getImageableY()); 
                 
            try{
                int y=20;
                int yShift = 10;
                int headerRectHeight=15;
 
                g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                    ImageObserver rootPane = null;
                //g2d.drawImage(icon.getImage(), left, top, Width, Height, rootPane);y+=yShift+175;
                g2d.drawImage(icon.getImage(), 120, 10, 140, 80, rootPane);y+=yShift+50;
                g2d.drawString("------------------------------------------------------------",20,y);y+=yShift;
                g2d.setFont(new Font("bold",Font.PLAIN,12));
                g2d.drawString("                              Hóa Đơn Thanh Toán",20,y);y+=yShift+3;
                g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                
                PhieuKham pk = daoPK.selectByID(Integer.valueOf(txtMaPhieuKham.getText()));
                BenhNhan bn = daoBN.selectByID(pk.getMaBN());
                SimpleDateFormat time = new SimpleDateFormat("hh:mm:ss a");
                SimpleDateFormat day = new SimpleDateFormat("dd-MM-YYYY");
                g2d.drawString("             Ngày "+time.format(new Date())+"   Giờ "+day.format(new Date()),20,y);y+=yShift+20;
                g2d.drawString("   Số Phiếu      : "+txtDonThuoc.getText(), 20, y);y+=yShift;
                g2d.drawString("   Người Mua     : "+txtTenBenhNhan.getText(),20,y);y+=yShift;
                g2d.drawString("   Địa chỉ       : "+bn.getDiaChi(),20,y);y+=yShift;
                g2d.drawString("   Chuẩn Đoán    : "+pk.getKetQuaDieuTri(),20,y);y+=yShift;
                g2d.drawString("   Bác Sĩ kê đơn : "+txtBacSi.getText(),20,y);y+=yShift;
                g2d.drawString("------------------------------------------------------------",20,y);y+=headerRectHeight;
                g2d.drawString("STT |   Tên Thuốc      | Số Lượng | Đơn Giá |  Thành Tiền",20,y);y+=yShift;
                
                int rowTable=27+rowIN*12;
                tblTable.print(g2d.create(20, y, 340, rowTable));y+=yShift;
                g2d.setFont(new Font("bold",Font.PLAIN,12));
                y+=rowTable+yShift;
                g2d.drawString("                                              Thanh Toán : "+formatter.format(tongtien)+" VND",20,y);y+=3*yShift;
                g2d.drawString("   Người Nhận                                  Bác Sĩ khám", 40, y);y+=yShift;

                } catch(Exception e){
                    e.printStackTrace();
                }

                result = PAGE_EXISTS;    
            }    
                return result;    
        }
    }
    int tongtien=0;
    void fillTablePrint(){
        DefaultTableModel model = (DefaultTableModel) tblTable.getModel();
        model.setRowCount(0);
        int dt =Integer.valueOf(txtDonThuoc.getText());
        try {
            List<DonThuocCT> list = daoDTCT.selectByDT(dt);
            int i =1;
            for (DonThuocCT dtct: list) {
                Thuoc th = daoThuoc.selectByID(dtct.getLoaiThuoc());
                int dongia=th.getGiaBan()-th.getGiaNhap();
                int thanhtien = dongia*dtct.getSoLuong();
                model.addRow(new Object[]{i,th.getTenThuoc(),dtct.getSoLuong(),formatter.format(dongia),formatter.format(thanhtien)});
                i++;
                tongtien+=thanhtien;
                rowIN=i;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaThuoc;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnl;
    private javax.swing.JPanel pnlBenhNhan;
    private javax.swing.JPanel pnlCapnhap;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JPanel pnlPrint;
    private javax.swing.JPanel pnlThuoc;
    private javax.swing.JScrollPane sc;
    private javax.swing.JTabbedPane tabsDanhsach;
    private javax.swing.JTabbedPane tabsDonThuoc;
    private javax.swing.JTable tblDonThuoc;
    private javax.swing.JTable tblPhieuKhamDT;
    private javax.swing.JTable tblTable;
    private javax.swing.JTable tblThuoc;
    private javax.swing.JTable tbldanhsachThuoc;
    private javax.swing.JTextField txtBacSi;
    private javax.swing.JTextField txtDonThuoc;
    private javax.swing.JTextField txtMaBN;
    private javax.swing.JTextField txtMaPhieuKham;
    private javax.swing.JTextField txtTenBenhNhan;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
    
    int row = -1;
    int indexDanhsachThuoc=-1;
    int indexPK=-1;
    int rowDonThuocThuoc=-1;
    PhieuKhamDao daoPK = new PhieuKhamDao();
    BenhNhanDao daoBN = new BenhNhanDao();
    ThuocDao daoThuoc = new ThuocDao();
    PhongKhamBenhDao daoPKBenh = new PhongKhamBenhDao();
    DonThuocDao daoDT = new DonThuocDao();
    DonThuocCTDao daoDTCT = new DonThuocCTDao();
    DTable dTable = new DTable();
    
    void inti(){
        this.fillTableDonThuoc();
        this.fillTableDanhSachThuoc();
        this.fillTableDonThuocBenhNhan();
        this.fillTableBenhNhanDT();
        this.row = -1;
        tabsDonThuoc.setSelectedIndex(2);
        tblThuoc.setDefaultRenderer(tblThuoc.getColumnClass(0), dTable);
        tbldanhsachThuoc.setDefaultRenderer(tbldanhsachThuoc.getColumnClass(0), dTable);
        tblPhieuKhamDT.setDefaultRenderer(tblPhieuKhamDT.getColumnClass(0), dTable);
        tblDonThuoc.setDefaultRenderer(tblDonThuoc.getColumnClass(0), dTable);
    }

    void clearForm() {
        txtMaBN.setText("");
        txtDonThuoc.setText("");
        txtBacSi.setText("");
        txtMaPhieuKham.setText("");
        txtTenBenhNhan.setText("");
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        model.setRowCount(0);
        this.row = -1;
        //this.UpdateStatus();
    }
    
    void first() {
        this.row = 0;
        this.editDT();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
           this.editDT();
        }
    }

    void next() {
        if (this.row < tbldanhsachThuoc.getRowCount() - 1) {
            this.row++;
            this.editDT();
        }
    }

    void last() {
        this.row = tbldanhsachThuoc.getRowCount() - 1;
        this.editDT();
    }
    
    void editDT() {
        int th =   (int) tblDonThuoc.getValueAt(this.row, 0);
        DonThuoc dt = daoDT.selectByID(th);
        this.setFormDT(dt);
        tabsDonThuoc.setSelectedIndex(0);
        this.updateStatusDT(false);
    }

    
    void insertDonThuoc() {
        DonThuoc th = getForm();
        try {
            daoDT.insert(th);
            for (int i = 0; i < tblThuoc.getRowCount(); i++) {
                DonThuocCT dtct = getFormDTCT(i);
                daoDTCT.insert(dtct);
            }
            this.fillTableDonThuoc();
            this.fillTableDonThuocBenhNhan();
            row = -1;
            indexDanhsachThuoc=-1;
            indexPK=-1;
            rowDonThuocThuoc=-1;
            Msgbox.alert(this, "Thêm mới thành công!");
            fillTablePrint();
            this.updateStatusDT(false);
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Thêm mới thất bại!");
        }
    }
    
    void updateDonThuoc() {
        DonThuoc th = getForm();
        try {
            daoDTCT.detele(th.getDonThuoc());
            for (int i = 0; i < tblThuoc.getRowCount(); i++) {
                DonThuocCT dtct = getFormDTCT(i);
                daoDTCT.insert(dtct);
            }
            this.fillTableDonThuocBenhNhan();
            this.fillTableDonThuoc();
            //this.clearForm();
            fillTablePrint();
            Msgbox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Cập nhật thất bại!");
        }
    }

    void deleteDonThuoc() {
            int MaDT = Integer.valueOf(txtDonThuoc.getText());
            if (Msgbox.confirm(this, "Bạn thực sự muốn xóa loại thuốc này?")) {
                try {
                    daoDTCT.detele(MaDT);
                    daoDT.detele(MaDT);
                    this.fillTableDonThuocBenhNhan();
                    this.fillTableDonThuoc();
                    this.clearForm();
                    this.updateStatusDT(true);
                    Msgbox.alert(this, "Xoá thành công!");
                    tabsDonThuoc.setSelectedIndex(2);
                } catch (Exception e) {
                    Msgbox.alert(this, "Xóa thất bại!");
                }
        }
    }
    //Đỗ dữ liệu vào tblDonThuoc
    void fillTableDonThuoc() {
        DefaultTableModel model = (DefaultTableModel) tblDonThuoc.getModel();
        model.setRowCount(0);
        try {
            List<DonThuoc> list = daoDT.selectAll();
            for (DonThuoc th : list) {
                PhieuKham pk = daoPK.selectByID(th.getMaPhieuKham());
                BenhNhan bn = daoBN.selectByID(pk.getMaBN());
                Object[] row = {th.getDonThuoc(), th.getMaPhieuKham(), th.getMaBN(),bn.getTenBenhNhan(),pk.getBS()};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    //Đỗ dữ liệu vào tbl_danhSach
    void fillTableDanhSachThuoc() {
        DefaultTableModel model = (DefaultTableModel) tbldanhsachThuoc.getModel();
        model.setRowCount(0);
        try {
            String keyWord = txtTimKiem.getText();
            List<Thuoc> list = daoThuoc.selectByKeyword(keyWord);
            for (Thuoc th : list) {
                Object[] row = {th.getLoaiThuoc(), th.getTenThuoc(),formatter.format(th.getGiaBan())};
                model.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    //Đỗ dữ liệu vào tblThuoc
    void fillTableThuocKham(){
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        model.setRowCount(0);
        int dt =Integer.valueOf(txtDonThuoc.getText());
        try {
            List<DonThuocCT> list = daoDTCT.selectByDT(dt);
            for (DonThuocCT dtct: list) {
                Thuoc th = daoThuoc.selectByID(dtct.getLoaiThuoc());
                model.addRow(new Object[]{dtct.getLoaiThuoc(),th.getTenThuoc(),dtct.getSoLuong()});
            }
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }
    
    void AddTableThuocKham(){
        DefaultTableModel model = (DefaultTableModel) tblThuoc.getModel();
        String LoaiThuoc = (String) tbldanhsachThuoc.getValueAt(indexDanhsachThuoc, 0);
        
        int error=0;
        for (int i = 0; i < tblThuoc.getRowCount(); i++) {
            if(LoaiThuoc.equals(tblThuoc.getValueAt(i, 0))){
                tabsDonThuoc.setSelectedIndex(1);
                error++;
            }
        }
        if(error==0){
            try {
                Thuoc thuoc = daoThuoc.selectByID(LoaiThuoc);
                Object[] row = {thuoc.getLoaiThuoc(),thuoc.getTenThuoc(),0};
                model.addRow(row);
                tabsDonThuoc.setSelectedIndex(0);
            } catch (Exception e) {
                Msgbox.alert(this, "Lỗi truy vấn dữ liệu!");
            }
        } else Msgbox.alert(this, "Thuốc Này đã chọn");  
    }
    
    void fillTableDonThuocBenhNhan(){
        DefaultTableModel model = (DefaultTableModel) tblPhieuKhamDT.getModel();
        model.setRowCount(0);
        try {
            List<PhieuKham> list = daoPK.selectChuaCoDonThuoc();
            for (PhieuKham pk : list) {
                PhongKham phongKham = daoPKBenh.selectByID(pk.getMaPK());
                BenhNhan bn = daoBN.selectByID(pk.getMaBN());
                model.addRow(new Object[]{pk.getMaPhieuKham(),pk.getMaBN(),bn.getTenBenhNhan(),pk.getBS(),phongKham.getTenPhongKham(),pk.getNgayKham()});
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void fillTableBenhNhanDT(){
        DefaultTableModel model = (DefaultTableModel) tblPhieuKhamDT.getModel();
        model.setRowCount(0);
        try {
            List<PhieuKham> list = daoPK.selectBenhNhanNotDonThuoc();
            for (PhieuKham pk : list) {
                PhongKham phongKham = daoPKBenh.selectByID(pk.getMaPK());
                BenhNhan bn = daoBN.selectByID(pk.getMaBN());
                model.addRow(new Object[]{pk.getMaPhieuKham(),pk.getMaBN(),bn.getTenBenhNhan(),pk.getBS(),phongKham.getTenPhongKham(),pk.getNgayKham()});
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    //Hien thi donthuoc len form
    void setFormDT(DonThuoc th) {
        txtDonThuoc.setText(String.valueOf(th.getDonThuoc()));
        txtMaBN.setText(th.getMaBN());
        txtMaPhieuKham.setText(String.valueOf(th.getMaPhieuKham()));
        BenhNhan bn = daoBN.selectByID(th.getMaBN());
        PhieuKham pk = daoPK.selectByID(th.getMaPhieuKham());
        txtBacSi.setText(pk.getBS());
        txtTenBenhNhan.setText(bn.getTenBenhNhan());
        this.fillTableThuocKham();
    }
    
    void setDonThuocBenhNhan(PhieuKham pk){
        txtBacSi.setText(pk.getBS());
        txtMaBN.setText(pk.getMaBN());
        txtMaPhieuKham.setText(pk.getMaPhieuKham());
        BenhNhan bn = daoBN.selectByID(pk.getMaBN());
        txtTenBenhNhan.setText(bn.getTenBenhNhan());
        txtDonThuoc.setText(pk.getMaPhieuKham());
    }

    //tao donthuocct tu form
    DonThuocCT getFormDTCT(int i){
        DonThuocCT thct = new DonThuocCT();
        thct.setDonThuoc(Integer.valueOf(txtDonThuoc.getText()));
        thct.setLoaiThuoc((String) tblThuoc.getValueAt(i, 0));
        thct.setSoLuong((int) tblThuoc.getValueAt(i, 2));
        return thct;
    }
    //tao donthuoc tu form
    DonThuoc getForm() {
        DonThuoc th = new DonThuoc();
        th.setDonThuoc(Integer.valueOf(txtDonThuoc.getText()));
        th.setMaBN(txtMaBN.getText());
        th.setMaPhieuKham(Integer.valueOf(txtMaPhieuKham.getText()));
        return th;
    }

    //cap nhap trang thai cac nut
    void updateStatusDT(boolean x) {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tbldanhsachThuoc.getRowCount() - 1);
        // Trạng thái form
        btnThem.setEnabled(x);
        btnMoi.setEnabled(x);
        btnSua.setEnabled(!x);
        btnXoa.setEnabled(!x);
        btnPrint.setEnabled(!x);
        // Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPrev.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }
    
    boolean CheckErrorDonThuoc(){
        int error=0;
        if(!Utility.checkNullText(txtDonThuoc)){
            error ++;
            Msgbox.alert(this, "Dơn thuốc không bỏ trống");
        } else
        if(!Utility.checkSLTable(tblThuoc)){
            error ++;
            Msgbox.alert(this, "Số Lượng không bỏ trống");
        }
        if(error !=0){
             return false;
        } else{
            return true;
        }
       
    }
    void timKiem(){
        this.fillTableDanhSachThuoc();
        this.row = -1;
    }
    
    
    
}
